.hamburgerIcon{
    /* display: flex; */
}
import NewClient from "./NewClient";
import { render } from "@testing-library/react";
import NewPackage from "./NewPackage";
import NewPackage from "./NewPackage";

  GridSaveAltIcon,
  DisplaySettings,
  Visibility,
  , { Axios }
  
// import "./NewClient.css";


  let currDate = new Date();

  // console.log(remarks);
    console.log(id);
    console.log(searchedData);
        // console.log(resp);
  // console.log(user);
  // console.log(user.fName);
  const CustomButtonComponent = (props) => {
    return <button onClick={() => window.alert("clicked")}>Push Me!</button>;
  };
  const [moreOptions, setMoreOptions] = useState(false);
  const hamburgerClicked = () => {
    setMoreOptions(!moreOptions);
  };
  
  const moreOptionsPanel = () => {
    return (
      <div>
        <div className="panel"></div>
      </div>
    );
  };

  const [rows, setRows] = useState(rowsData);
    // let ok = window.confirm("Are you sure want to delete");
    console.log(id);
        // memberID = cellValue.value;
      // renderCell: (cellValue) => {
      //   return <p>{cellValue.value - currDate.getDate()}</p>;
      // },
        // console.log(cellValue.value);
        
import Packages from "./Packages";
            // window.location.reload();
  const navigate = useNavigate();
  // console.log(searchData);
    console.log(searchData);
        console.log(res.data);
import { useNavigate } from "react-router-dom";
Component,
    /* align-items: center; */
    /* height: 500px; */
    /* background-color: black; */
    /* color:white */
    /* width: 40vw; */
        console.log(id);
        console.log(resp.data);
import Logo from "./Logo.jpg";
import Close from "@mui/icons-material/Close";
, { Axios }
          console.log("dashboard");
  const [errors, setErrors] = useState({});
    setErrors(validation(values));
import validation from "./LoginValidation";
    /* height: 500px; */
import InputLabel from "@mui/material/InputLabel";
import Dropdown from "react-dropdown";
    // autoGeneratedData();
        console.log("Success");
  const [subscripEnd, setSubscripEnd] = useState("");
  const [leftDays, setLeftDays] = useState("210");
      leftDays,
      subscripEnd,
    /* height: 20%; */
        console.log("Successfully Posted");
        , { Axios }
  const navigate = useNavigate();
import { useNavigate } from "react-router-dom";
        // if (res.data.updated) {
        // navigate("/dashboard");
        // }
    // console.log(id);
import DashBoard from "./Components/DashBoard";
import DetailPanelAutoHeight from "./Components/DetailPanelAutoHeight";
import { FormControl } from "@mui/material";
import NewClient from "./Components/NewClient";
body{
    
}// const corsOption = {
//   origin: ["https://egs-delhicombatadmin.onrender.com/"],
//   credentials: true,
//   methods: ["GET", "POST", "PUT", "DELETE"],
// };
// app.use(cors(corsOption));
// pool.getConnection((err, conn) => {
//   if (err) throw err;
//   const userName = "LakshayGoel";
//   const password = "Laskas22";
//   const qry = `INSERT INTO logincredentials(userName,password) VALUES(?,?)`;
//   conn.query(qry, [userName, password], (err, result) => {
//     conn.release();
//     if (err) throw err;
//     console.log(result);
//   });
// });
// app.use(bodyParser.urlencoded({ extended: true }));
  console.log("Ok");
      console.log("ok from getConnection");
        console.log(result);
  // setLeftDays("432");
  // let temp2 = subscripSta;
// console.log(currDate.getDate());
// let temp1 = 0;
  // if (Number(sS.substring(0, 4)) < currDate.getFullYear()) {
  //   temp1 = 12 - Number(sS.substring(5, 7)) + currDate.getMonth();
  // } else {
  //   temp1 = currDate.getMonth() - Number(sS.substring(5, 7));
  // }
  // console.log(temp1 + 1);
  console.log(pastDays);
getPastDays("2024-06-11");
const leftDayshandle = () => {};
        console.log("Result");
      console.log(result);
      // console.log(result);
  console.log("Ok from server");
        console.log("Success");
        console.log("Success");
  console.log("Inside the search server");
      console.log(result);

  console.log("Ok from history server");
    console.log("Ok from start");
        console.log(result);
        console.log(result);
      console.log(result);
      console.log(result);
      console.log(result);
// app.post("/login", (req, res) => {
//   console.log("ok from server");
//   const sqlCheck =
//     "SELECT * FROM logincredentials WHERE `userName` = ? AND `password` = ?";
//   pool.query(
//     sqlCheck,
//     [req.body.values.userName, req.body.values.password],
//     (err, result) => {
//       console.log("From server" + err);
//     }
//   );
// });

  console.log("Ok");
  
  console.log("Ok from renewMemberShip");
  
    console.log(req.params.id);